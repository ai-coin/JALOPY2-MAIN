<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.ai-blockchain</groupId>
  <artifactId>jalopy2-core-aiblockchain</artifactId>
  <version>1.1</version>
  <packaging>jar</packaging>

  <description>This project is based on the original project at jalopy.sourceforge.com</description>

  <distributionManagement>
    <repository>
      <!-- Nexus artifact server must be the same as specified in ~/.m2/settings.xml -->
      <id>nexus</id>
      <url>http://api-ai-blockchain-server.dyndns.org:8885/texai-artifact-server/repository/maven-releases/</url>
    </repository>
  </distributionManagement>

  <properties>
    <maven.build.timestamp.format>yyyyMMdd-HHmm</maven.build.timestamp.format>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <javaVersion>17</javaVersion>

    <!-- Name of bundle properties files, need packaging with JAR. -->
    <resources.bundle_properties.filename>Bundle.properties</resources.bundle_properties.filename>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.30</version>
    </dependency>

    <!-- the preferred Log4J is version 1, not version 2 -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.30</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
    </dependency>

    <dependency>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>antlr-maven-plugin</artifactId>
      <version>2.2</version>
    </dependency>

    <dependency>
      <groupId>antlr</groupId>
      <artifactId>antlr</artifactId>
      <version>2.7.7</version>
    </dependency>


  </dependencies>
  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <showDeprecation>true</showDeprecation>
          <source>${javaVersion}</source>
          <target>${javaVersion}</target>
          <compilerArgs>
            <arg>-Xlint:all,-options,-path</arg>
            <arg>--enable-preview</arg>
          </compilerArgs>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.3.0</version>
        <configuration>
          <source>${javaVersion}</source>
          <encoding>utf8</encoding>
          <quiet>false</quiet>
          <additionalOptions>--enable-preview,-Xdoclint:none</additionalOptions>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <!-- <version>3.0.0-M5</version> -->
        <version>2.22.1</version>
        <configuration>
          <properties>
            <property>
              <name>usedefaultlisteners</name>
              <value>false</value> <!-- disabling default listeners is optional -->
            </property>
          </properties>
          <!-- full stack trace on exception -->
          <trimStackTrace>false</trimStackTrace>
          <!-- run each unit test in a separate forked JVM to avoid inconsistences due to static class state -->
          <forkCount>1</forkCount>
          <reuseForks>false</reuseForks>
          <!-- <argLine>-Dorg.texai.tempRepositories=${env.REPOSITORIES_TMPFS} -Djava.security.policy==file:///${basedir}/../Security/security/texai.policy -Djava.security.debug=all</argLine> -->
          <!--  <argLine>-ea -Dorg.texai.tempRepositories=${env.REPOSITORIES_TMPFS} -Djava.security.policy==file:///${basedir}/../Security/security/texai.policy </argLine>  -->
          <!--  <argLine>-ea -Dlog4j2.debug=1 -Dlog4j.debug=1 -Dorg.texai.tempRepositories=${env.REPOSITORIES_TMPFS} -Djava.security.policy==file:///${basedir}/../Security/security/texai.policy </argLine>  -->
          <argLine>-Xms1G -Xmx5G -ea --enable-preview -Dorg.texai.tempRepositories=${env.REPOSITORIES_TMPFS} -Djava.security.policy==file:///${basedir}/../Security/security/texai.policy </argLine>

          <!--   <argLine>-ea -Djava.security.debug=all</argLine>  -->
        </configuration>
      </plugin>


      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.6.0</version>
        <configuration>
          <arguments>
            <argument>-ea</argument>
            <argument>-Xms1G</argument>
            <argument>-Xmx5G</argument>
            <argument>--enable-preview</argument>
          </arguments>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.sonatype.ossindex.maven</groupId>
        <artifactId>ossindex-maven-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <fail>false</fail>
          <excludeVulnerabilityIds>
            <exclude>20f9410b-fbc4-4d14-a1ab-3d12ab9732dd</exclude>
            <exclude>846fbf13-a0b9-4cab-b820-8415a30326bd</exclude>
            <exclude>d3477f9c-032a-44a7-a5e1-02ae35e4737c</exclude>
            <exclude>e6e4ebea-da12-4bde-8f24-6272925ad093</exclude>
            <exclude></exclude>
            <exclude></exclude>
            <exclude></exclude>
            <exclude></exclude>
          </excludeVulnerabilityIds>
        </configuration>
        <executions>
          <execution>
            <id>audit-dependencies</id>
            <phase>deploy</phase>
            <goals>
              <goal>audit</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.7</version>
          <!-- do not report stale major updates to slf4j-api for example -->
        <configuration>
          <allowMajorUpdates>false</allowMajorUpdates>
        </configuration>
        <executions>
          <execution>
            <id>display-dependency-updates</id>
            <phase>deploy</phase>
            <goals>
              <goal>display-dependency-updates</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.7</version>
        <executions>
          <execution>
            <id>copy Bundle.properties files</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/classes/</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/src/main/java</directory>
                  <includes>
                    <include>**/${resources.bundle_properties.filename}</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.agilejava.docbkx</groupId>
        <artifactId>docbkx-maven-plugin</artifactId>
        <version>2.0.14-SNAPSHOT</version>
        <executions>
          <!-- -->
          <execution>
            <id>documentation identifier</id>
            <phase>pre-site</phase>
            <goals>
              <goal>generate-xhtml</goal>
              <!-- <goal>generate-pdf</goal> <goal>generate-...</goal> <goal>generate-pdf</goal> -->
            </goals>
            <configuration>
              <!-- per execution configuration -->
              <includes>**/*-docbkx.xml</includes>
              <draftMode>false</draftMode>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>net.sf.docbook</groupId>
            <artifactId>docbook-xml</artifactId>
            <version>5.0-all</version>
            <classifier>resources</classifier>
            <type>zip</type>
            <scope>runtime</scope>
          </dependency>
        </dependencies>
        <configuration>
          <!-- shared configuration -->
          <targetDirectory>target/site/</targetDirectory>
          <xincludeSupported>true</xincludeSupported>
          <paperType>A4</paperType>
          <fop1Extensions>1</fop1Extensions>
          <chunkedOutput>true</chunkedOutput>
          <xhtmlCustomization>src/docbkx/manual/manual.src.xsl</xhtmlCustomization>
          <customizationParameters>
            <!-- additional XSLT parameters -->
            <parameter>
              <name>build.time</name>
              <value>${maven.build.timestamp}</value>
            </parameter>
            <parameter>
              <name>version</name>
              <value>${project.version}</value>
            </parameter>
          </customizationParameters>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>antlr-maven-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <!-- By default, grammar files are in ${basedir}/src/main/antlr -->
          <grammarDefs>
            <grammar>
              <name>common.g</name>
            </grammar>
            <grammar>
              <name>java15.g</name>
            </grammar>
            <grammar>
              <name>java.doc.g</name>
            </grammar>
          </grammarDefs>
        </configuration>
        <executions>
          <execution>
            <goals>
              <!-- generate is the correct goal -->
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.0.0-M1</version>
        </plugin>

        <!--This plugin's configuration is used to store Eclipse m2e settings
        only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>
                      antlr-maven-plugin
                    </artifactId>
                    <versionRange>[2.2,)</versionRange>
                    <goals>
                      <goal>generate</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

  </build>

  <reporting>
    <plugins>
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.0</version>
          <configuration>
            <reportPlugins>
              <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                  <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
                  <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                </configuration>
                <!-- simpler configuration without reportSets available for usual
                cases -->
                <reports>
                  <report>index</report>
                  <report>dependencies</report>
                  <report>summary</report>
                  <report>scm</report>
                </reports>
              </plugin>
              <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.8</version>
              </plugin>
            </reportPlugins>
          </configuration>
        </plugin>
    </plugins>
  </reporting>
</project>
